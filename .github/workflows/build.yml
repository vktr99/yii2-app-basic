on:
  pull_request:
    paths-ignore:
      - "**.md"

name: build

jobs:
  tests:
    if: github.head_ref != 'asd_master'
    name: PHP ${{ matrix.php }} - ${{ matrix.os }}

    env:
      extensions: dom, json, gd imagick
      key: cache-v1

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

        php:
          - "7.3"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: date.timezone='UTC'

      - name: Determine composer cache directory on Linux
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
        working-directory: app

      - name: Cache dependencies installed with composer
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: php${{ matrix.php }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-${{ matrix.dependencies }}-

      - name: Install dependencies with composer php PHP [5.6 - 7.4]
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
        working-directory: app

      - name: Enable Default MySQL and create test DB
        run: |
          sudo systemctl start mysql.service
          mysql -uroot -proot -e "CREATE SCHEMA yii2basic_test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci"

      - name: Run tests with codeception
        run: |
          sed -i "s/mytest_db_1/localhost/" config/test_db.php
          sed -i "s/'cookieValidationKey' => ''/'cookieValidationKey' => 'testkey'/" config/web.php
          php -S 127.0.0.1:8080 -t public > ./runtime/yii.log 2>&1 &
          tests/bin/yii migrate/up --interactive 0
          vendor/bin/codecept run
        shell: bash
        working-directory: app